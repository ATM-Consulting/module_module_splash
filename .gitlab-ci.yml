################################################################################
#
#  This file is part of SplashSync Project.
#
#  Copyright (C) Splash Sync <www.splashsync.com>
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  For the full copyright and license information, please view the LICENSE
#  file that was distributed with this source code.
#
#  @author Bernard Paquier <contact@splashsync.com>
#
################################################################################

################################################################
# Select image from https://hub.docker.com/_/php/
image:  monogramm/docker-dolibarr
################################################################
# Set any variables we need
variables:
    # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
    MYSQL_DATABASE:         dolibarr
    MYSQL_ROOT_PASSWORD:    dolibarr
    DOCKER_DRIVER:          overlay2
    COMPOSER_MEMORY_LIMIT:  -1
    # Configure Dolibarr environment variables (https://github.com/Monogramm/docker-dolibarr)
    DOLI_DB_TYPE:           mysqli
    DOLI_DB_HOST:           mysql
    DOLI_DB_NAME:           dolibarr
    DOLI_DB_USER:           root
    DOLI_DB_PASSWORD:       dolibarr
    DOLI_ADMIN_LOGIN:       PhpUnit

################################################################
# Defined Pipeline Stages
stages:
    - quality
    - tests
    - deploy

################################################################
# Functional Tests
################################################################
.functionnal:   &functionnal
#    when:       manual
    stage:      tests
    tags:       ['Dedicated']
    retry:      2
    services:
        - mysql:5.7
    artifacts:
        when: always
        reports:
            junit: "$CI_PROJECT_DIR/*-report.xml"
    ################################################################
    # Before Script
    before_script:
        - cat ci/before.sh | bash
    ################################################################
    # Main Script
    script:
        - pwd
        ################################################################
        # Start Web Server
        - service apache2 restart && service apache2 status
        ################################################################
        # Install Module
        - cat ci/install.sh | bash
        - cd  /var/www/html/custom
        ################################################################################
        # Build Module (Composer)
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh | bash
        ################################################################################
        # Execute Bootstrap file
        - php travis/bootstrap.php
        # Show PhpUnit Version
        - splash/vendor/phpunit/phpunit/phpunit --version
        # Run PhpUnit Main Local Testsuite
        - splash/vendor/phpunit/phpunit/phpunit -c travis/phpunit.xml.dist --log-junit $CI_PROJECT_DIR/local-report.xml --testsuite=Local
        - splash/vendor/phpunit/phpunit/phpunit -c travis/phpunit.xml.dist --log-junit $CI_PROJECT_DIR/full-report.xml

Dol-14-Php-7.4:
    image:          tuxgasy/dolibarr:14
    <<: *functionnal

Dol-13-Php-7.3:
    image:          tuxgasy/dolibarr:13
    <<: *functionnal
#
# Dol-12-Php-7.2:
#     image:          monogramm/docker-dolibarr:12.0-apache
#     <<: *functionnal
#
# Dol-10-Php-7.2:
#     image:          monogramm/docker-dolibarr:10.0
#     <<: *functionnal
#
# Dol-9-Php-7.2:
#     image:          monogramm/docker-dolibarr:9.0
#     <<: *functionnal
#
# Dol-Dev-Php-7.2:
#     image:          monogramm/docker-dolibarr:develop
#     allow_failure:  true
#     <<: *functionnal


################################################################
# Code Quality Verifications 
################################################################
.code_quality:   &code_quality
#    when:       manual
    image:      tuxgasy/dolibarr:14
    stage:      quality
    tags:       ['Dedicated']
    retry:      2
    services:
        - mysql:5.7
    ################################################################
    # Before Script
    before_script:
        - cat ci/before.sh | bash
    ################################################################
    # Main Script
    script:
        ################################################################
        # Install Module
        - cat ci/install.sh | bash
        - cd  /var/www/html/custom
        ################################################################################
        # Build Module (Composer)
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh | bash
        ################################################################
        # Execute Code Quality Analyze
        - pwd
        - php splash/vendor/bin/grumphp run --testsuite=travis
        - php splash/vendor/bin/grumphp run --testsuite=csfixer
        - php splash/vendor/bin/grumphp run --testsuite=phpstan
    ################################################################################
    # Run After Script
    after_script:
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/after.sh | sh

Dol-14-Quality:
    image:      tuxgasy/dolibarr:14
    <<: *code_quality

Dol-12-Quality:
    image:      tuxgasy/dolibarr:12
    <<: *code_quality

Dol-Dev-Quality:
    image:      tuxgasy/dolibarr:develop
    allow_failure:  true
    <<: *code_quality

#################################################################
## Build Documentation
#################################################################
pages:
    image:      registry.gitlab.com/splashsync/php-console:pages
    stage:      deploy
    tags:       ['Dedicated']
    retry:      2
    services:
        - docker:dind
    ################################################################################
    # Run Test Script
    script:
        # Run Composer to Build deps
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
        # Build Documentation
        - php splash/vendor/bin/grumphp run --tasks=build-docs
    artifacts:
        paths:
            - public

#################################################################
## Build Documentation
#################################################################
module:
    image:      registry.gitlab.com/splashsync/php-console:pages
    stage:      deploy
    tags:       ['Dedicated']
    retry:      2
    services:
        - docker:dind
    ################################################################################
    # Run Test Script
    script:
        # Run Composer to Build deps
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
        # Build Documentation
        - php splash/vendor/bin/grumphp run --tasks=build-module
    artifacts:
        paths:
            - build
